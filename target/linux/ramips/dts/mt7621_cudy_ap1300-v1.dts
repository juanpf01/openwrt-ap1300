// SPDX-License-Identifier: GPL-2.0-or-later OR MIT

#include "mt7621.dtsi"

#include <dt-bindings/input/input.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	compatible = "cudy,ap1300indoor", "mediatek,mt7621-soc";
	model = "Cudy AP1300 Indoor";

	aliases {
		led-boot      = &led_sys;
		led-failsafe  = &led_sys;
		led-running   = &led_sys;
		led-upgrade   = &led_sys;
		label-mac-device = &gmac0;
	};

	chosen {
		bootargs = "console=ttyS0,115200";
	};

	keys {
		compatible = "gpio-keys";

		reset {
			label       = "reset";
			gpios       = <&gpio 8 GPIO_ACTIVE_LOW>;
			linux,code  = <KEY_RESTART>;
		};
	};

	leds {
		compatible = "gpio-leds";

		/* Single-color status LED on GPIO 4 (white when “on”): */
		led_sys: status {
			label            = "status:sys";
			gpios            = <&gpio 4 GPIO_ACTIVE_LOW>;
			color            = <LED_COLOR_ID_WHITE>;
			function         = LED_FUNCTION_STATUS;
			default-state    = "on";
		};

		/* Bi-color LED (red + blue), driven by two GPIOs: */
		led_rb {
			label    = "status:rb";
			function = LED_FUNCTION_HEARTBEAT;

			/* Red component (GPIO 46) */
			led_red: led@0 {
				color = <LED_COLOR_ID_RED>;
				gpios = <&gpio 46 GPIO_ACTIVE_LOW>;
			};

			/* Blue component (GPIO 45) */
			led_blue: led@1 {
				color = <LED_COLOR_ID_BLUE>;
				gpios = <&gpio 45 GPIO_ACTIVE_LOW>;
			};
		};
	};

	watchdog {
		compatible    = "linux,wdt-gpio";
		gpios         = <&gpio 7 GPIO_ACTIVE_LOW>;
		hw_algo       = "toggle";
		/* ~10-second timeout */
		hw_margin_ms  = <10000>;
		always-running;
	};
};

&spi0 {
	status = "okay";

	flash@0 {
		compatible         = "jedec,spi-nor";
		reg                = <0>;
		spi-max-frequency  = <10000000>;
		m25p,fast-read;

		partitions {
			compatible   = "fixed-partitions";
			#address-cells = <1>;
			#size-cells    = <1>;

			partition@0 {
				label     = "u-boot";
				reg       = <0x0 0x30000>;
				read-only;
			};

			partition@30000 {
				label     = "u-boot-env";
				reg       = <0x30000 0x10000>;
				read-only;
			};

			partition@40000 {
				label     = "factory";
				reg       = <0x40000 0x10000>;
				read-only;

				nvmem-layout {
					compatible     = "fixed-layout";
					#address-cells = <1>;
					#size-cells    = <1>;

					eeprom_factory_0: eeprom@0 {
						reg = <0x0 0x400>;
					};

					eeprom_factory_8000: eeprom@8000 {
						reg = <0x8000 0x4da8>;
					};
				};
			};

			partition@50000 {
				compatible = "denx,uimage";
				label      = "firmware";
				reg        = <0x50000 0xf80000>;
			};

			partition@fd0000 {
				label     = "debug";
				reg       = <0xfd0000 0x10000>;
				read-only;
			};

			partition@fe0000 {
				label     = "backup";
				reg       = <0xfe0000 0x10000>;
				read-only;
			};

			partition@ff0000 {
				label     = "bdinfo";
				reg       = <0xff0000 0x10000>;
				read-only;

				nvmem-layout {
					compatible     = "fixed-layout";
					#address-cells = <1>;
					#size-cells    = <1>;

					macaddr_bdinfo_de00: macaddr@de00 {
						compatible         = "mac-base";
						reg                = <0xde00 0x6>;
						#nvmem-cell-cells  = <1>;
					};
				};
			};
		};
	};
};

&pcie {
	status = "okay";
};

&pcie0 {
	wifi@0,0 {
		compatible          = "mediatek,mt76";
		reg                 = <0x0000 0 0 0 0>;
		nvmem-cells         = <&eeprom_factory_0>, <&macaddr_bdinfo_de00 1>;
		nvmem-cell-names    = "eeprom", "mac-address";
		ieee80211-freq-limit = <2400000 2500000>;
	};
};

&pcie1 {
	wifi@1,0 {
		compatible          = "mediatek,mt76";
		reg                 = <0x0000 0 0 0 0>;
		nvmem-cells         = <&eeprom_factory_8000>, <&macaddr_bdinfo_de00 2>;
		nvmem-cell-names    = "eeprom", "mac-address";
		ieee80211-freq-limit = <5000000 6000000>;
	};
};

&gmac0 {
	nvmem-cells       = <&macaddr_bdinfo_de00 1>;
	nvmem-cell-names  = "mac-address";
};

&gmac1 {
	status            = "okay";
	label             = "lan";
	phy-handle        = <&ethphy4>;

	nvmem-cells       = <&macaddr_bdinfo_de00 0>;
	nvmem-cell-names  = "mac-address";
};

&ethphy4 {
	/delete-property/ interrupts;
};

&xhci {
	status = "okay";
};

&state_default {
	gpio {
		groups   = "wdt", "i2c", "jtag";
		function = "gpio";
	};
};
